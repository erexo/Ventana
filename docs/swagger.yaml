definitions:
  dto.Filters:
    properties:
      Column:
        type: string
      Count:
        type: integer
      Descending:
        type: boolean
      Offset:
        type: integer
    type: object
  dto.Point:
    properties:
      celsius:
        type: number
      timestamp:
        type: integer
    type: object
  dto.Thermometer:
    properties:
      celsius:
        type: number
      id:
        type: integer
      name:
        type: string
      sensor:
        type: string
    type: object
  dto.User:
    properties:
      id:
        type: integer
      role:
        type: integer
      username:
        type: string
    type: object
  thermal.dataDto:
    properties:
      from:
        type: integer
      thermometerid:
        type: integer
      to:
        type: integer
    type: object
  thermal.saveDto:
    properties:
      name:
        type: string
      sensor:
        type: string
    type: object
  user.LoginInfo:
    properties:
      accessToken:
        type: string
      role:
        type: integer
    type: object
  user.createDto:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  user.loginDto:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.updatePasswordDto:
    properties:
      password:
        type: string
    type: object
  user.updateRoleDto:
    properties:
      role:
        type: integer
    type: object
info:
  contact: {}
paths:
  /:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.loginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginInfo'
  /thermal/browse:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.Filters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Thermometer'
            type: array
      security:
      - ApiKeyAuth: []
  /thermal/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/thermal.saveDto'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /thermal/data:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/thermal.dataDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Point'
            type: array
      security:
      - ApiKeyAuth: []
  /thermal/delete/{id}:
    delete:
      parameters:
      - description: path
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /thermal/update/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: path
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/thermal.saveDto'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /user/browse:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.Filters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
      security:
      - ApiKeyAuth: []
  /user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.createDto'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /user/delete/{id}:
    delete:
      parameters:
      - description: path
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /user/update/password/{id}:
    patch:
      parameters:
      - description: path
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.updatePasswordDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
  /user/update/role/{id}:
    patch:
      parameters:
      - description: path
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.updateRoleDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
